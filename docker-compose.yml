services:
    database:
        image: postgres:17
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
            interval: 5s
            timeout: 5s
            retries: 5

    api:
        build:
            context: backend
            dockerfile: Dockerfile
        environment:
            DATABASE_URL: postgresql+psycopg://postgres:postgres@database:5432/postgres
        depends_on:
            database:
                condition: service_healthy
        ports:
            - "8000:8000"
        develop:
            watch:
                -   action: sync
                    path: ./backend/app
                    target: /app/app/
                -   action: rebuild
                    path: ./backend/pyproject.toml

    frontend:
        build:
            context: frontend
            dockerfile: Dockerfile
        environment:
            NEXT_PUBLIC_API_BASE: http://localhost:8000
            NEXT_PUBLIC_WS_BASE: ws://localhost:8000
        ports:
            - "3000:3000"
        depends_on:
            - api
        develop:
            watch:
                -   action: sync
                    path: ./frontend
                    target: /app
                    ignore:
                        - node_modules/
                        - .next/

volumes:
    pgdata:
