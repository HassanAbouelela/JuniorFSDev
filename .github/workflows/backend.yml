name: Backend CI

on:
    push:
        paths:
            - "backend/**"
            - ".github/workflows/backend.yml"
    pull_request:
        paths:
            - "backend/**"

jobs:
    lint-test:
        name: Lint & Test
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: backend
                shell: bash

        steps:
            -   uses: actions/checkout@v4

            -   name: Install Python Dependencies
                uses: HassanAbouelela/actions/setup-python@setup-python_v1.6.0
                with:
                    install_args: "--with dev"
                    python_version: "3.13"
                    working_dir: "backend"
                    cache_pre-commit: false

            -   name: Black (check)
                run: poetry run black --check .

            -   name: Isort
                run: poetry run isort --check-only .

            -   name: Ruff
                run: poetry run ruff check .

            # TODO: Add database if required for tests
            -   name: Pytest
                run: poetry run pytest
                env:
                    CI: true
                    DATABASE_URL: postgresql+psycopg://postgres:postgres@localhost:5432/postgres

    atlas-check:
        name: Test Database Migrations
        runs-on: ubuntu-latest

        defaults:
            run:
                shell: bash
                working-directory: backend

        services:
            database:
                image: postgres:17
                env:
                    POSTGRES_DB: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-start-period 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            -   uses: actions/checkout@v4
            -   uses: ariga/setup-atlas@v0

            -   name: Lint Migrations
                run: atlas migrate lint --env CI --latest 100

            -   name: Validate Migrations
                run: atlas migrate validate --env CI

            -   name: Check Schema Updated
                run: |
                    # Try to generate an update
                    atlas migrate diff --env CI

                    # If there are changes to the migrations directory, error out
                    MIGRATIONS_DIR="./migrations"
                    if ! git diff --quiet "$MIGRATIONS_DIR"; then
                        echo "::error title=Pending Migrations::Detected unapplied atlas migrations. Please run `atlas migrate diff --env dev` and commit."
                        git --no-pager diff "$MIGRATIONS_DIR"
                        exit 12
                    else
                        echo "All migrations up to date"
                    fi

            -   name: Apply Migrations To Test DB
                run: atlas migrate apply --env CI

    docker-build:
        name: Docker Build
        runs-on: ubuntu-latest
        needs: [ lint-test, atlas-check ]

        defaults:
            run:
                working-directory: backend
                shell: bash

        steps:
            -   uses: actions/checkout@v4

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Login to Docker Hub
                if: github.ref_name == 'main'
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: Build image
                uses: docker/build-push-action@v6
                with:
                    context: ./backend
                    file: ./backend/Dockerfile
                    push: ${{ github.ref_name == 'main' }}
                    tags: ${{ secrets.DOCKERHUB_USERNAME || 'local' }}/task-ai-backend:${{ github.sha }}
