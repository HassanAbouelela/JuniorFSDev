name: Frontend CI

on:
    push:
        paths:
            - "frontend/**"
            - ".github/workflows/frontend.yml"
            - "deployment/manifests/frontend/**"
    pull_request:
        paths:
            - "frontend/**"
            - "deployment/manifests/frontend/**"

jobs:
    lint-test-build:
        name: Lint, Typecheck & Build
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: frontend
                shell: bash

        steps:
            -   uses: actions/checkout@v4

            -   name: Setup Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: "20"
                    cache: npm
                    cache-dependency-path: frontend/package-lock.json

            -   name: Install dependencies
                run: npm ci

            -   name: Typecheck (TS)
                run: npx tsc --noEmit

            -   name: Test Build
                env:
                    CI: true
                    NEXT_PUBLIC_API_BASE: http://localhost:8000
                    NEXT_PUBLIC_WS_BASE: ws://localhost:8000
                run: npm run build

    docker-build:
        name: Docker Build
        runs-on: ubuntu-latest
        needs: [ lint-test-build ]
        concurrency:
            group: ${{ github.workflow }}-docker-build-${{ github.ref }}
            cancel-in-progress: true

        defaults:
            run:
                shell: bash

        steps:
            -   uses: actions/checkout@v4

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Login to Docker Hub
                if: github.event_name == 'push' && github.ref_name == 'main'
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: Build image
                uses: docker/build-push-action@v6
                with:
                    context: ./frontend
                    file: ./frontend/Dockerfile
                    push: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
                    tags: |
                        ${{ secrets.DOCKERHUB_USERNAME || 'local' }}/task-ai-frontend:${{ github.sha }}
                        ${{ secrets.DOCKERHUB_USERNAME || 'local' }}/task-ai-frontend:latest
                    build-args: |
                        NEXT_PUBLIC_API_BASE=${{ vars.NEXT_PUBLIC_API_BASE }}
                        NEXT_PUBLIC_WS_BASE=${{ vars.NEXT_PUBLIC_WS_BASE }}

    deploy-staging:
        name: Deploy To Staging
        runs-on: ubuntu-latest
        needs: docker-build
        if: github.event_name == 'push' && github.ref_name == 'main'
        environment:
            name: Staging

        concurrency:
            group: ${{ github.workflow }}-deploy-${{ github.ref }}
            cancel-in-progress: true

        steps:
            -   name: Checkout Repository On Server
                uses: appleboy/ssh-action@v1.2.2
                with:
                    host: ${{ secrets.EC2_HOST }}
                    username: ubuntu
                    key: ${{ secrets.EC2_SSH_KEY }}
                    script: |
                        set -e
                        cd /home/ubuntu/
                        # Clone or update repo
                        if [ ! -d "/home/ubuntu/infra_repo" ]; then
                          git clone https://github.com/HassanAbouelela/JuniorFSDev infra_repo
                        fi

                        cd /home/ubuntu/infra_repo
                        git pull origin main

            -   name: Apply Manifests
                uses: appleboy/ssh-action@v1.2.2
                with:
                    host: ${{ secrets.EC2_HOST }}
                    username: ubuntu
                    key: ${{ secrets.EC2_SSH_KEY }}
                    script: |
                        set -e

                        # Go to the manifests directory and apply
                        cd /home/ubuntu/infra_repo/deployment/manifests

                        # Modify the deployment to point at the latest build
                        sed -i 's|hassanabouelela/task-ai-frontend:latest|hassanabouelela/task-ai-frontend:${{ github.sha }}|g' frontend/deployment.yml
                        kubectl apply -f frontend
                        git reset HEAD --hard
